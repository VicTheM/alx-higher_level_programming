>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> m_a = [
... [1, 2],
... [3, 4],
... ]
>>> m_b = m_a
>>> print(matrix_mul(m_a, m_b))
[[7, 10], [15, 22]]

>>> m_a = [
... [1, 3, 5],
... [7, 9, 11],
... [13, 15, 17]
... ]
>>> m_b = [
... [2, 4, 6, 8, 10],
... [2, 4, 6, 8, 10],
... [2, 4, 6, 8, 10]
... ]
>>> print(matrix_mul(m_a, m_b))
[[18, 36, 54, 72, 90], [54, 108, 162, 216, 270], [90, 180, 270, 360, 450]]

>>> m_a = [
... [1, 2],
... [3, 4],
... ]
>>> m_b = [
... [1, 2],
... [2, 3],
... [4, 5]
... ]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> print(matrix_mul([], [[1, 2]]))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> print(matrix_mul([[1, 2]], [[]]))
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> print(matrix_mul("a list?", [[1, 2]]))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> print(matrix_mul([[1, 2]], "a list?"))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> print(matrix_mul([1, 2], [[3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> print(matrix_mul([[1, 2]], [3, 4]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> print(matrix_mul([[1, "number?"]], [[3, 4]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul([[1, 2]], [[{"a": 1}, 8.8]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> m_a = [
... [1, 2],
... [3, 4, 5]
... ]
>>> m_b = [
... [1, 2],
... [3, 4]
... ]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> m_a = [
... [1, 2],
... [3, 4]
... ]
>>> m_b = [
... [1, 2],
... [3, 4, 5]
... ]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
